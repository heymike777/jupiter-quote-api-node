/* tslint:disable */
/* eslint-disable */
/**
 * Swap API
 * The heart and soul of Jupiter lies in the Quote and Swap API.  ### API Rate Limit Since 1 December 2024, we have updated our API structure. Please refer to [Station](https://station.jup.ag/docs/) for further details on usage and rate limits.  ### API Usage - API Wrapper Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data Types To Note - Public keys are base58 encoded strings - Raw data such as Vec<u8\\> are base64 encoded strings 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SwapResponsePrioritizationTypeComputeBudget } from './SwapResponsePrioritizationTypeComputeBudget';
import {
    SwapResponsePrioritizationTypeComputeBudgetFromJSON,
    SwapResponsePrioritizationTypeComputeBudgetFromJSONTyped,
    SwapResponsePrioritizationTypeComputeBudgetToJSON,
} from './SwapResponsePrioritizationTypeComputeBudget';
import type { SwapResponsePrioritizationTypeJito } from './SwapResponsePrioritizationTypeJito';
import {
    SwapResponsePrioritizationTypeJitoFromJSON,
    SwapResponsePrioritizationTypeJitoFromJSONTyped,
    SwapResponsePrioritizationTypeJitoToJSON,
} from './SwapResponsePrioritizationTypeJito';

/**
 * The type of prioritization used for the swap, either Jito or ComputeBudget.
 * @export
 * @interface SwapResponsePrioritizationType
 */
export interface SwapResponsePrioritizationType {
    /**
     * 
     * @type {SwapResponsePrioritizationTypeJito}
     * @memberof SwapResponsePrioritizationType
     */
    jito?: SwapResponsePrioritizationTypeJito;
    /**
     * 
     * @type {SwapResponsePrioritizationTypeComputeBudget}
     * @memberof SwapResponsePrioritizationType
     */
    computeBudget?: SwapResponsePrioritizationTypeComputeBudget;
}

/**
 * Check if a given object implements the SwapResponsePrioritizationType interface.
 */
export function instanceOfSwapResponsePrioritizationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SwapResponsePrioritizationTypeFromJSON(json: any): SwapResponsePrioritizationType {
    return SwapResponsePrioritizationTypeFromJSONTyped(json, false);
}

export function SwapResponsePrioritizationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapResponsePrioritizationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'jito': !exists(json, 'jito') ? undefined : SwapResponsePrioritizationTypeJitoFromJSON(json['jito']),
        'computeBudget': !exists(json, 'computeBudget') ? undefined : SwapResponsePrioritizationTypeComputeBudgetFromJSON(json['computeBudget']),
    };
}

export function SwapResponsePrioritizationTypeToJSON(value?: SwapResponsePrioritizationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'jito': SwapResponsePrioritizationTypeJitoToJSON(value.jito),
        'computeBudget': SwapResponsePrioritizationTypeComputeBudgetToJSON(value.computeBudget),
    };
}

